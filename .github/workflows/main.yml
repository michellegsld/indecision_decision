# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    # Runs Deployment with AWS Elastic Beanstalk
    - name: Beanstalk Deploy
      uses: einaregilsson/beanstalk-deploy@v10
      with:
        # AWS Access Key
        aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
        # AWS Secret Key
        aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        # AWS Region
        region: us-east-1
        # Beanstalk application name
        application_name: IndecisiveDecision
        # Beanstalk environment name. If empty a version will be created but not deployed anywhere.
        environment_name: Indecisivedecision-env
        # Version label for new Beanstalk version
        version_label: 1
        # Version description for the new Beanstalk version
        version_description: # optional
        # Zip file with the version to deploy. If skipped the action will deploy existing version.
        deployment_package: # optional
        # If set to "true" then the action will deploy an existing version with the given version_label if it already exists, but otherwise create the version and deploy it.
        use_existing_version_if_available: # optional
        # Whether the action should wait for the deployment to finish and log status messages during the wait. Default is "true". If set to "false" the action will start the deployment on Beanstalk and then exit.
        wait_for_deployment: # optional
        # How many seconds to wait for the environment to return to Green state after deployment is finished. Default is 30 seconds.
        wait_for_environment_recovery: # optional
